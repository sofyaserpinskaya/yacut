import random
from datetime import datetime

from flask import url_for

from . import db
from settings import (
    ITERATION_NUMBER, SHORT_ID_AUTOGENERATED_MAX_LENGTH,
    SHORT_ID_CHARACTER_SET
)


class URL_map(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    original = db.Column(db.String(250), nullable=False)
    short = db.Column(db.String, unique=True)
    timestamp = db.Column(db.DateTime, index=True, default=datetime.now)

    def from_dict(self, data):
        setattr(self, 'original', data['url'])
        setattr(self, 'short', data['custom_id'])

    def to_dict(self):
        return dict(
            url=self.original,
            short_link=url_for(
                'get_original_url', short_id=self.short, _external=True
            ),
        )

    def get_unique_short_id(self):
        for _ in range(ITERATION_NUMBER):
            short_id = ''.join(
                random.sample(
                    SHORT_ID_CHARACTER_SET, SHORT_ID_AUTOGENERATED_MAX_LENGTH
                )
            )
            if self.query.filter_by(short=short_id).first() is None:
                return short_id

    def get_url_map(self, short_id):
        return self.query.filter_by(short=short_id).first()

    def add_to_db(self):
        db.session.add(self)
        db.session.commit()
